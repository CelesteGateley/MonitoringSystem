module xyz {
    module fluxinc {
        module noxmonitoring {
            module corba {

                enum MonitorType {
                    nitrous_oxide
                };

                struct LogEntry {
                    string location;
                    MonitorType type;
                    double value;
                };

                typedef sequence<MonitorType> MonitorTypeSequence;
                typedef sequence<LogEntry> LogSequence;

                interface MonitorStation {
                    MonitorTypeSequence get_available_sensors();
                    double get_sensor_value(in MonitorType sensor);
                    string get_location();
                    /** Extra Function - Enable/Disable Stations/Servers **/
                    void enable_sensor(in MonitorType sensor);
                    void enable_station();

                    void disable_sensor(in MonitorType sensor);
                    void disable_station();
                };

                typedef sequence<MonitorStation> MonitorStationSequence;

                interface LocalControlServer {
                    void register();
                    void deregister();
                    MonitorStationSequence get_available_stations();
                    void report_value(in MonitorStation station, in MonitorType type, in double sensor_value);
                    LogSequence get_logs();
                };

                interface CentralControl {
                    void register();
                    void deregister();
                    void confirmed_alarm(in LocalControlServer server);
                };
            };
        };
    };
};